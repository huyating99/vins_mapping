%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  

imu_topic: "/camera/imu"
image0_topic: "/camera/color/image_raw"
image1_topic: "/camera/color/image_raw"
output_path: "/home/hu/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 1280
image_height: 720
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.999991, -0.00398386, 0.00126064, -0.0204153805971146,
           0.00398058, 0.999989, 0.00259721,  0.00495810247957706,
           -0.00127097, -0.00259217, 0.999996, 0.0111132906749845,
           0, 0, 0, 1]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. 
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     
acc_w: 0.001        # accelerometer bias random work noise standard deviation.  
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/hu/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

#mapping parameters
rangeMiss: 1

map:
  sizex: 200
  sizey: 200
  initx: 100
  inity: 100
  cell_size: 0.05
  frame_id: odom
  #num_range_date表示子地图插入的关键帧数量
  num_range_data: 100
  #increase pixel每次扩张地图像素数量，每侧pixel/2
  increase_pixel: 20

  #打空最少帧率为miss_score/scan_hight,如果60/5,则表示该像素最起码需要12帧都打空才会认定为打空
  miss_score: 100

robot_laser:
  x: 0.0
  y: 0.0
  theta: 0.0

sensor_model:
  P_occ: 0.6
  P_free: 0.4
  P_prior: 0.5

save_map: 1

scan_topic: /scan
